/*
 * Iris is a World Generator for Minecraft Bukkit Servers
 * Copyright (c) 2021 Arcane Arts (Volmit Software)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.guardsquare:proguard-gradle:7.1.0'
    }
}

plugins {
    id 'java'
    id 'io.freefair.lombok' version '5.2.1'
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

group 'com.volmit'
version '1.0'
def apiVersion = '1.17'
def name = getRootProject().getName() // See settings.gradle
def main = 'com.volmit.shapedportals.ShapedPortals'
// You need to also set command usage, aliases and description in src/main/resources/plugin.yml

// ADD YOURSELF AS A NEW LINE IF YOU WANT YOUR OWN BUILD TASK GENERATED
// ==============================================================
registerCustomOutputTask('Cyberpwn', 'C://Users/cyberpwn/Documents/development/server/plugins', name)
registerCustomOutputTask('ArcaneArts', 'C://Users/arcane/Documents/development/server/plugins', name)
// ==============================================================

def dependsDir = "${buildDir}/libs/dependencies/" as String

def registerCustomOutputTask(name, path, plugin) {
    tasks.register('build' + name, Copy) {
        group('development')
        outputs.upToDateWhen { false }
        dependsOn ':shadowJar'
        from(file('build/libs/' + plugin + '-' + version + '-all.jar'))
        into(file(path))
        rename { String fileName ->
            fileName.replace(plugin + '-' + version + '-all.jar', plugin + ".jar")
        }
    }
}

file(jar.archiveFile.get().getAsFile().getParentFile().getParentFile().getParentFile().getAbsolutePath() + '/build/resources/main/plugin.yml').delete()

shadowJar
{
    minimize()
    append("plugin.yml")
    relocate 'com.dfsek.paralithic', 'com.volmit.iris.util.paralithic'
    relocate 'io.papermc.lib', 'com.volmit.iris.util.paper'
    dependencies {
        include(dependency('io.papermc:paperlib'))
        include(dependency('com.dfsek:Paralithic'))
        include(dependency('net.kyori:'))
    }
}

processResources {
    filesMatching('**/plugin.yml') {
        expand(
                'name': name.toString(),
                'version': version.toString(),
                'main': main.toString(),
                'apiversion': apiVersion.toString()
        )
    }
}

repositories {
    maven {
        url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        content {
            includeGroup 'org.spigotmc'
        }
    }
    maven {
        url 'https://papermc.io/repo/repository/maven-public/'
        content {
            includeGroup 'io.papermc'
        }
    }
    maven {
        url 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
        content {
            includeGroup 'me.clip'
        }
    }
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
        content {
            includeGroup 'net.kyori'
        }
    }
    maven {
        url 'https://repo.jeff-media.de/maven2'
        content {
            includeGroup 'de.jeff_media'
        }
    }
    maven { url 'https://jitpack.io' }
    maven {
        url 'https://repo.codemc.io/repository/maven-releases'
        content {
            includeGroup 'com.dfsek'
        }
    }
    mavenCentral()
    mavenLocal()
    maven {
        allowInsecureProtocol true
        url 'http://archive.arcane.art/repository/arcane'
        content {
            includeGroup 'org.bukkit.craftbukkit'
            includeGroup 'io.th0rgal'
        }
    }

    // Uncomment this line if the build is failing because of missing dependencies
    // Its slow but it will resolve any cached dependencies until we can find an alternative repo
    // maven { allowInsecureProtocol true, url 'http://archive.arcane.art/repository/arcane'}
}

dependencies {
    // Provided or Classpath
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation 'org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'

    // Dynamically Loaded
    implementation 'com.google.code.gson:gson:2.8.7'
}
